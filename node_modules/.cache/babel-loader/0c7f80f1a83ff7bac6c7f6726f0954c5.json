{"ast":null,"code":"import _objectSpread from \"/Users/admin/Desktop/p/hackaton/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/admin/Desktop/p/hackaton/my-app/src/calendar/calendar.jsx\";\nimport React from 'react';\nimport './calendar.css';\nimport '../pop-up/pop-up.css';\nimport { PopUp } from \"../pop-up/pop-up\";\nimport Button from \"react-bootstrap/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\n\nconst daysInMonth = function (date) {\n  return 32 - new Date(date.getFullYear(), date.getMonth(), 32).getDate();\n};\n\nlet monthName = [\"Січень\", \"Лютий\", \"Березнь\", \"Квітень\", \"Травень\", \"Червень\", \"Липень\", \"Серпень\", \"Вересень\", \"Жовтень\", \"Листопад\", \"Грудень\"];\n\nfunction createCalendar(year, month) {\n  let body = [];\n  let date = new Date(year, month);\n  let startPosisiton = 0;\n\n  if (date.getDay() === 0) {\n    startPosisiton = 7;\n  } else {\n    startPosisiton = date.getDay();\n  }\n\n  for (let i = 1; i < startPosisiton; i++) {\n    body.push('');\n  }\n\n  for (let i = 1; i <= daysInMonth(date); i++) {\n    let getCurrentDay = new Date(year, month, i);\n    let date = {\n      dateNumber: i,\n      fullDate: \"\".concat(getCurrentDay.getDate(), \".\").concat(getCurrentDay.getMonth(), \".\").concat(getCurrentDay.getFullYear())\n    };\n    body.push(date);\n  }\n\n  for (let i = daysInMonth(date) + startPosisiton - 1; i % 7; i++) {\n    body.push('');\n  }\n\n  return body;\n} // let tasks = {};\n\n\nexport class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: new Date().getMonth(),\n      year: new Date().getFullYear(),\n      isModalOpened: false,\n      openedDate: null,\n      tasks: JSON.parse(window.localStorage.getItem(\"tasks\")) || {}\n    };\n    this.moveForward = this.moveForward.bind(this);\n    this.movePrevious = this.movePrevious.bind(this);\n    this.currentMonth = this.currentMonth.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.cancelButton = this.cancelButton.bind(this);\n    this.saveButton = this.saveButton.bind(this);\n    this.renderTasks = this.renderTasks.bind(this);\n  }\n\n  renderTasks(date) {\n    let renderTask;\n\n    if (this.state.tasks[date]) {\n      renderTask = this.state.tasks[date].map(task => {\n        return React.createElement(\"li\", {\n          className: 'calendar__task',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, task.title);\n      });\n    } else {\n      return;\n    }\n\n    return renderTask;\n  }\n\n  openModal(openedDate) {\n    this.setState(state => ({\n      isModalOpened: true,\n      openedDate: openedDate\n    }));\n  }\n\n  saveButton(task) {\n    this.setState(state => ({\n      isModalOpened: false\n    }));\n\n    if (task !== '') {\n      if (this.state.tasks[this.state.openedDate]) {\n        this.state.tasks[this.state.openedDate].push({\n          title: task\n        });\n        window.localStorage.setItem(\"tasks\", JSON.stringify(_objectSpread({}, this.state.tasks)));\n      } else {\n        this.state.tasks[this.state.openedDate] = [];\n        this.state.tasks[this.state.openedDate].push({\n          title: task\n        });\n        window.localStorage.setItem(\"tasks\", JSON.stringify(_objectSpread({}, this.state.tasks)));\n      }\n    }\n  }\n\n  cancelButton() {\n    this.setState(state => ({\n      isModalOpened: false\n    }));\n  }\n\n  moveForward() {\n    this.setState(state => ({\n      month: state.month + 1\n    }));\n\n    if (this.state.month > 10) {\n      this.setState(state => ({\n        month: 0,\n        year: state.year + 1\n      }));\n    }\n  }\n\n  movePrevious() {\n    this.setState(state => ({\n      month: state.month - 1\n    }));\n\n    if (this.state.month < 1) {\n      this.setState(state => ({\n        month: 11,\n        year: state.year - 1\n      }));\n    }\n  }\n\n  currentMonth() {\n    this.setState(state => ({\n      month: new Date().getMonth(),\n      year: new Date().getFullYear()\n    }));\n  }\n\n  render() {\n    const calendarDays = createCalendar(this.state.year, this.state.month);\n    return React.createElement(\"div\", {\n      className: 'main',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calendar__buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.movePrevious,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"\\u041F\\u043E\\u043F\\u0435\\u0440\\u0435\\u0434\\u043D\\u0456\\u0439 \\u043C\\u0456\\u0441\\u044F\\u0446\\u044C\"), React.createElement(Button, {\n      onClick: this.currentMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"\\u0421\\u044C\\u043E\\u0433\\u043E\\u0434\\u043D\\u0456\"), React.createElement(Button, {\n      onClick: this.moveForward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"\\u041D\\u0430\\u0441\\u0442\\u0443\\u043F\\u043D\\u0438\\u0439 \\u043C\\u0456\\u0441\\u044F\\u0446\\u044C\")), React.createElement(DropdownButton, {\n      id: \"dropdown-basic-button\",\n      title: \"Dropdown button\",\n      variant: \"Secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      href: \"#/action-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Action\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Another action\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Something else\")), React.createElement(\"span\", {\n      className: \"calendar__date--main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"\\u041C\\u0456\\u0441\\u044F\\u0446\\u044C: \", monthName[this.state.month], \", \\u0420\\u0456\\u043A: \", this.state.year), React.createElement(\"div\", {\n      className: \"calendar__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calendar__dayOfWeek\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"\\u043F\\u043D\"), React.createElement(\"div\", {\n      className: \"calendar__dayOfWeek\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"\\u0432\\u0442\"), React.createElement(\"div\", {\n      className: \"calendar__dayOfWeek\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"\\u0441\\u0440\"), React.createElement(\"div\", {\n      className: \"calendar__dayOfWeek\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"\\u0447\\u0442\"), React.createElement(\"div\", {\n      className: \"calendar__dayOfWeek\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"\\u043F\\u0442\"), React.createElement(\"div\", {\n      className: \"calendar__dayOfWeek\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"\\u0441\\u0431\"), React.createElement(\"div\", {\n      className: \"calendar__dayOfWeek\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"\\u043D\\u0434\")), React.createElement(\"div\", {\n      className: \"calendar__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, calendarDays.map((day, i) => {\n      return day ? React.createElement(\"div\", {\n        className: 'calendar__day',\n        key: i,\n        onClick: () => {\n          this.openModal(day.fullDate);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'calendar__date',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, day.dateNumber), React.createElement(\"div\", {\n        className: 'calendar__event',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.renderTasks(day.fullDate)))) : React.createElement(\"div\", {\n        className: 'calendar__day',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      });\n    }))), this.state.isModalOpened ? React.createElement(PopUp, {\n      openModal: this.openModal,\n      cancelButton: this.cancelButton,\n      saveButton: this.saveButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/Desktop/p/hackaton/my-app/src/calendar/calendar.jsx"],"names":["React","PopUp","Button","Dropdown","DropdownButton","daysInMonth","date","Date","getFullYear","getMonth","getDate","monthName","createCalendar","year","month","body","startPosisiton","getDay","i","push","getCurrentDay","dateNumber","fullDate","Calendar","Component","constructor","props","state","isModalOpened","openedDate","tasks","JSON","parse","window","localStorage","getItem","moveForward","bind","movePrevious","currentMonth","openModal","cancelButton","saveButton","renderTasks","renderTask","map","task","title","setState","setItem","stringify","render","calendarDays","day"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './calendar.css';\nimport '../pop-up/pop-up.css';\nimport {PopUp} from \"../pop-up/pop-up\";\nimport Button from \"react-bootstrap/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nconst daysInMonth = function (date) {\n    return 32 - new Date(date.getFullYear(), date.getMonth(), 32).getDate();\n};\n\nlet monthName = [\"Січень\", \"Лютий\", \"Березнь\", \"Квітень\", \"Травень\", \"Червень\", \"Липень\", \"Серпень\", \"Вересень\", \"Жовтень\", \"Листопад\", \"Грудень\"];\n\nfunction createCalendar(year, month) {\n    let body = [];\n    let date = new Date(year, month);\n    let startPosisiton = 0;\n    if (date.getDay() === 0) {\n        startPosisiton = 7;\n    } else {\n        startPosisiton = date.getDay();\n    }\n    for (let i = 1; i < startPosisiton; i++) {\n        body.push('');\n    }\n    for (let i = 1; i <= daysInMonth(date); i++) {\n        let getCurrentDay = new Date(year, month, i);\n        let date = {\n            dateNumber: i,\n            fullDate: `${getCurrentDay.getDate()}.${getCurrentDay.getMonth()}.${getCurrentDay.getFullYear()}`\n        };\n        body.push(date);\n    }\n    for (let i = daysInMonth(date) + startPosisiton - 1; i % 7; i++) {\n        body.push('');\n    }\n    return body;\n}\n\n// let tasks = {};\n\nexport class Calendar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            month: new Date().getMonth(),\n            year: new Date().getFullYear(),\n            isModalOpened: false,\n            openedDate: null,\n            tasks: JSON.parse(window.localStorage.getItem(\"tasks\")) || {},\n        };\n\n        this.moveForward = this.moveForward.bind(this);\n        this.movePrevious = this.movePrevious.bind(this);\n        this.currentMonth = this.currentMonth.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.cancelButton = this.cancelButton.bind(this);\n        this.saveButton = this.saveButton.bind(this);\n        this.renderTasks = this.renderTasks.bind(this);\n    };\n\n    renderTasks(date) {\n        let renderTask;\n        if (this.state.tasks[date]) {\n            renderTask = this.state.tasks[date].map((task) => {\n                return <li className={'calendar__task'}>{task.title}</li>\n            })\n        } else {\n            return\n        }\n        return renderTask;\n    }\n\n    openModal(openedDate) {\n        this.setState(state => ({\n            isModalOpened: true,\n            openedDate: openedDate,\n        }));\n    }\n\n    saveButton(task) {\n        this.setState(state => ({isModalOpened: false}));\n\n\n        if (task !== '') {\n            if (this.state.tasks[this.state.openedDate]) {\n                this.state.tasks[this.state.openedDate].push({title: task});\n                window.localStorage.setItem(\"tasks\", JSON.stringify({...this.state.tasks}));\n            } else {\n                this.state.tasks[this.state.openedDate] = [];\n                this.state.tasks[this.state.openedDate].push({title: task});\n                window.localStorage.setItem(\"tasks\", JSON.stringify({...this.state.tasks}));\n            }\n        }\n    }\n\n    cancelButton() {\n        this.setState(state => ({isModalOpened: false}));\n    }\n\n    moveForward() {\n        this.setState(state => ({\n            month: state.month + 1\n        }));\n\n        if (this.state.month > 10) {\n            this.setState(state => ({\n                month: 0,\n                year: state.year + 1\n            }));\n        }\n\n    }\n\n    movePrevious() {\n        this.setState(state => ({\n            month: state.month - 1\n        }));\n\n        if (this.state.month < 1) {\n            this.setState(state => ({\n                month: 11,\n                year: state.year - 1\n            }));\n        }\n    }\n\n    currentMonth() {\n        this.setState(state => ({\n            month: new Date().getMonth(),\n            year: new Date().getFullYear()\n        }))\n    }\n\n    render() {\n        const calendarDays = createCalendar(this.state.year, this.state.month);\n        return (<div className={'main'}>\n            <div className=\"calendar\">\n                <div className=\"calendar__buttons\">\n                    <Button onClick={this.movePrevious}>Попередній місяць</Button>\n                    <Button onClick={this.currentMonth}>Сьогодні</Button>\n                    <Button onClick={this.moveForward}>Наступний місяць</Button>\n                </div>\n                <DropdownButton id=\"dropdown-basic-button\" title=\"Dropdown button\" variant=\"Secondary\">\n                    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n                </DropdownButton>\n                <span className=\"calendar__date--main\">Місяць: {monthName[this.state.month]}, Рік: {this.state.year}</span>\n                <div className=\"calendar__header\">\n                    <div className=\"calendar__dayOfWeek\">пн</div>\n                    <div className=\"calendar__dayOfWeek\">вт</div>\n                    <div className=\"calendar__dayOfWeek\">ср</div>\n                    <div className=\"calendar__dayOfWeek\">чт</div>\n                    <div className=\"calendar__dayOfWeek\">пт</div>\n                    <div className=\"calendar__dayOfWeek\">сб</div>\n                    <div className=\"calendar__dayOfWeek\">нд</div>\n                </div>\n                <div className=\"calendar__body\">\n                    {calendarDays.map((day, i) => {\n                        return day ? <div className={'calendar__day'} key={i} onClick={() => {\n                            this.openModal(day.fullDate);\n                        }}>\n                            <div className={'calendar__date'}>{day.dateNumber}</div>\n                            <div className={'calendar__event'}>\n                                <ol>\n                                    {this.renderTasks(day.fullDate)}\n                                </ol>\n                            </div>\n                        </div> : <div className={'calendar__day'}></div>\n                    })}\n                </div>\n            </div>\n            {this.state.isModalOpened ? <PopUp openModal={this.openModal}\n                                               cancelButton={this.cancelButton}\n                                               saveButton={this.saveButton}/> : null}\n        </div>)\n    };\n}\n\n"]},"metadata":{},"sourceType":"module"}